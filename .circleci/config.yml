version: 2
jobs:
  build:
    docker:
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.9.2
    working_directory: /go/src/github.com/NervanaSystems/kube-volume-controller
    steps:
      - checkout
      - run:
          name: install dependencies
          environment:
            GCLOUD_SDK_VERSION: 186.0.0
          command: |
            go get -u \
              github.com/golang/dep/cmd/dep \
              github.com/alecthomas/gometalinter \
              github.com/kubernetes/gengo/examples/deepcopy-gen
            pushd $HOME
            curl -sSLo google-cloud-sdk.tar.gz https://storage.googleapis.com/cloud-sdk-release/google-cloud-sdk-${GCLOUD_SDK_VERSION}-linux-x86_64.tar.gz
            tar zxf google-cloud-sdk.tar.gz && rm google-cloud-sdk.tar.gz
            ./google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --quiet
            sudo ln -s "${HOME}/google-cloud-sdk/bin/gcloud" /usr/local/bin/
            popd
      - run:
          name: get dependencies and generate
          command: |
            dep ensure
            make code-generation
      - run:
          name: Run lint tests
          command: |
            gometalinter --install
            make lint
      - run:
          name: Run unit tests
          command: |
            make test
      - setup_remote_docker
      - run:
          name: Build container
          command: |
            go install -gcflags "-N -l" github.com/NervanaSystems/kube-volume-controller
            cp /go/bin/kube-volume-controller ./
            make docker
            make push-image
  e2e:
    docker:
      - image: nanliu/circleci:master
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: install chart
          command: |
            mkdir -p $HOME/.kube
            KUBE_CONFIG=${GKE_KUBECONFIG_KVCCI}
            echo "${KUBE_CONFIG}" | base64 --decode > "${HOME}/.kube/config"
            context=$(kubectl config current-context)
            kubectl create ns "kvc-${CIRCLE_BUILD_NUM}"
            kubectl config set-context "${context}" --namespace="kvc-${CIRCLE_BUILD_NUM}"
            helm install ~/repo/helm-charts/kube-volume-controller/ -n "kvc-${CIRCLE_BUILD_NUM}" --wait \
              --set namespace="kvc-${CIRCLE_BUILD_NUM}" \
              --set clusterrole.install=false \
              --set storageclass.install=false \
              --set crd.install=true \
              --set tag=$(git describe --tags --always --dirty)
      - run:
          name: cleanup
          command: |
            helm delete --purge kvc-${CIRCLE_BUILD_NUM} || true
            kubectl delete ns kvc-${CIRCLE_BUILD_NUM} || true
          when: always

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - e2e_approval:
          type: approval
          requires:
            - build
      - e2e:
          requires:
            - e2e_approval
